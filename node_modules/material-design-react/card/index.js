'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _libMdlHook = require('../lib/mdl-hook');

var _libMdlHook2 = _interopRequireDefault(_libMdlHook);

var _menu = require('./menu');

var _menu2 = _interopRequireDefault(_menu);

var _media = require('./media');

var _media2 = _interopRequireDefault(_media);

var _title = require('./title');

var _title2 = _interopRequireDefault(_title);

var _actions = require('./actions');

var _actions2 = _interopRequireDefault(_actions);

var _titleText = require('./title-text');

var _titleText2 = _interopRequireDefault(_titleText);

var _subtitleText = require('./subtitle-text');

var _subtitleText2 = _interopRequireDefault(_subtitleText);

var _supportingText = require('./supporting-text');

var _supportingText2 = _interopRequireDefault(_supportingText);

var Card = (function (_React$Component) {
  _inherits(Card, _React$Component);

  function Card() {
    _classCallCheck(this, _Card);

    _get(Object.getPrototypeOf(_Card.prototype), 'constructor', this).apply(this, arguments);
  }

  _createClass(Card, [{
    key: 'render',
    value: function render() {
      var _props = this.props;
      var title = _props.title;
      var titleLevel = _props.titleLevel;
      var titleBorder = _props.titleBorder;
      var subtitle = _props.subtitle;
      var supporting = _props.supporting;
      var media = _props.media;
      var actions = _props.actions;
      var actionsBorder = _props.actionsBorder;
      var menu = _props.menu;
      var children = _props.children;

      var otherProps = _objectWithoutProperties(_props, ['title', 'titleLevel', 'titleBorder', 'subtitle', 'supporting', 'media', 'actions', 'actionsBorder', 'menu', 'children']);

      var renderedTitle = renderTitle({ title: title, titleLevel: titleLevel, titleBorder: titleBorder, subtitle: subtitle });
      var renderedSupporting = renderSupporting({ supporting: supporting });
      var renderedMedia = renderMedia({ media: media });
      var renderedActions = renderActions({ actions: actions, actionsBorder: actionsBorder });
      var renderedMenu = renderMenu({ menu: menu });

      return _react2['default'].createElement(
        'div',
        otherProps,
        renderedTitle,
        renderedSupporting,
        renderedMedia,
        children,
        renderedActions,
        renderedMenu
      );
    }
  }], [{
    key: 'propTypes',
    value: {
      title: _react2['default'].PropTypes.node,
      titleLevel: _react2['default'].PropTypes.oneOf([1, 2, 3, 4, 5, 6]),
      titleBorder: _react2['default'].PropTypes.bool,
      subtitle: _react2['default'].PropTypes.node,
      supporting: _react2['default'].PropTypes.node,
      media: _react2['default'].PropTypes.node,
      actions: _react2['default'].PropTypes.node,
      actionsBorder: _react2['default'].PropTypes.bool,
      menu: _react2['default'].PropTypes.node,
      children: _react2['default'].PropTypes.node
    },
    enumerable: true
  }, {
    key: 'defaultProps',
    value: {
      titleLevel: 1
    },
    enumerable: true
  }]);

  var _Card = Card;
  Card = (0, _libMdlHook2['default'])({
    displayName: 'MDRCard',
    blockClassName: 'mdl-card mdl-js-card',
    modifiers: [{
      prop: 'shadow',
      type: _react2['default'].PropTypes.oneOf([2, 3, 4, 6, 8]),
      classNameFn: function classNameFn(val) {
        return 'mdl-shadow--' + val + 'dp';
      }
    }]
  })(Card) || Card;
  return Card;
})(_react2['default'].Component);

function renderTitle(props) {
  var Subtitle = props.title && props.subtitle ? _react2['default'].createElement(_subtitleText2['default'], { children: props.subtitle }) : null;
  if (props.title) return _react2['default'].createElement(
    _title2['default'],
    { border: props.titleBorder },
    _react2['default'].createElement(_titleText2['default'], { children: props.title, level: props.titleLevel }),
    Subtitle
  );
  return null;
}

function renderSupporting(props) {
  if (props.supporting) return _react2['default'].createElement(_supportingText2['default'], { children: props.supporting });
  return null;
}

function renderMedia(props) {
  if (props.media) return _react2['default'].createElement(_media2['default'], { children: props.media });
  return null;
}

function renderActions(props) {
  if (props.actions) return _react2['default'].createElement(_actions2['default'], { children: props.actions, border: props.actionsBorder });
  return null;
}

function renderMenu(props) {
  if (props.menu) return _react2['default'].createElement(_menu2['default'], { children: props.menu });
  return null;
}

Card.Title = _title2['default'];
Card.TitleText = _titleText2['default'];
Card.SubtitleText = _subtitleText2['default'];
Card.SupportingText = _supportingText2['default'];
Card.Media = _media2['default'];
Card.Actions = _actions2['default'];
Card.Menu = _menu2['default'];

exports['default'] = Card;
module.exports = exports['default'];