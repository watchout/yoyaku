/**
 * Return className with mdl css classes and className from props
 * @param  {Object} props   props defined on Component
 * @param  {Object} config  config for className creation
 * @return {String}         the final className
 */
'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
exports['default'] = makeClassName;

function makeClassName(props, config) {
  var blockClassName = config.blockClassName;
  var modifierClassNameFns = config.modifierClassNameFns;

  var propClassNameFn = function propClassNameFn(prop) {
    return modifierClassNameFns[prop];
  };
  var propValue = function propValue(prop) {
    return props[prop];
  };

  var prepareClassName = function prepareClassName(prop) {
    var classNameFn = propClassNameFn(prop);
    var value = propValue(prop);

    return classNameFn(value);
  };

  var modifiersClassName = Object.keys(modifierClassNameFns).filter(propValue).map(prepareClassName).join('  ');

  return blockClassName + '  ' + modifiersClassName + '  ' + (props.className || '');
}

module.exports = exports['default'];